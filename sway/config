# Read `man 1 sway` for a complete reference.

### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot

set $cl_high #009ddc
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

set $font pango:Roboto 12

set $bemenuflags --binding vim \
  --prompt 'ÔÑÅ' \
  --fn 'pango:Hack 11' \
  --tb '#000000'  --tf '$cl_high' \
  --fb '#000000'  --ff '$cl_fore' \
  --nb '#000000'  --nf '#AAAAAA' \
  --ab '#000000'  --af '#AAAAAA' \
  --sb '#000000'  --sf '$cl_high' \
  --hb '$cl_back' --hf '$cl_high'

set $bg_image ~/.images/bg.jpg
set $lock_image ~/.images/lock.jpg

set $menu cat ~/.config/programs | bemenu $bemenuflags | xargs swaymsg exec --
set $allmenu bemenu-run --no-exec $bemenuflags | xargs swaymsg exec --
set $lock swaylock -f -i $lock_image

# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

font $font

default_border pixel 1
default_floating_border normal
hide_edge_borders smart

smart_gaps on
gaps inner 10

exec mako
exec autotiling-rs
exec slack --startup
exec discord --start-minimized
exec swayidle -w \
                timeout 300 '$lock' \
                timeout 600 'swaymsg "output * dpms off"' \
                     resume 'swaymsg "output * dpms on"' \
                before-sleep '$lock'

exec systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

# xwayland disable

### Output configuration
output * bg $bg_image fill
output eDP-1 scale 1.5

### Input configuration
input "type:touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
    scroll_factor 0.5
}

input "type:keyboard" {
    xkb_layout gb
}

### Key bindings
# Basics:
bindsym $mod+Return exec $term
bindsym $mod+Shift+q kill
bindsym $mod+d exec $menu
bindsym $mod+Shift+d exec $allmenu
floating_modifier $mod normal
bindsym $mod+Shift+c reload
bindsym $mod+x exec $lock

set $swaynag 'You pressed the exit shortcut. Do you really want to exit sway? Yes (Return) or No (Escape).'
mode $swaynag {
  bindsym $mod+shift+e mode "default"
	bindsym Return exit
	bindsym Escape mode "default"
}
bindsym $mod+shift+e mode $swaynag

# Moving around:
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Workspaces:
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Layout stuff:
bindsym $mod+b splith
bindsym $mod+v splitv

bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

bindsym $mod+f fullscreen

bindsym $mod+Shift+space floating toggle

bindsym $mod+space focus mode_toggle

bindsym $mod+a focus parent

bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

# Resizing containers:
mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# FN Keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next

bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+

bindsym XF86RFKill exec notify-send 'Airplane toggled'

bindsym $mod+p exec notify-send 'TODO?'

bindsym Print exec grim - | swappy -f -
bindsym $mod+Print exec grim -g "$(slurp)" - | swappy -f -
bindsym XF86AudioMedia exec systemctl suspend


# Status Bar:
bar {
    swaybar_command waybar
}

for_window [app_id="^chrome-.*"] shortcuts_inhibitor disable

include /etc/sway/config.d/*
